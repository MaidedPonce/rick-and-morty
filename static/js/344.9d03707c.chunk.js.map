{"version":3,"file":"static/js/344.9d03707c.chunk.js","mappings":"qMAMA,MAiGA,EAjGuBA,KACrB,MAAM,KAAEC,EAAI,QAAEC,EAAO,QAAEC,EAAO,WAAEC,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GACpDC,GAAWC,EAAAA,EAAAA,MAiDjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC/CC,EAAAA,EAAAA,MAAA,QACEF,UAAU,8EACVG,SApDcC,UAClBC,EAAEC,iBACFZ,GAAW,GACX,SACiBa,IAAfhB,EAAKiB,aACIC,EAAAA,EAAAA,IAAclB,EAAKiB,OAAOE,MAAMC,IACrC,GAAiB,IAAbA,EAAEC,OAAc,CAAC,IAADC,EAClB,QAAsBN,IAAlBhB,EAAKuB,WAA8B,OAAJvB,QAAI,IAAJA,GAAc,QAAVsB,EAAJtB,EAAMuB,gBAAQ,IAAAD,OAAV,EAAJA,EAAgBD,QAAS,EAC1D,OAAOG,EAAAA,GAAMC,MAAM,uDAErBC,EAAAA,EAAAA,IAAS,CACPT,MAAOjB,EAAKiB,MACZM,SAAUvB,EAAKuB,WAEdJ,MAAMQ,IACL1B,EAAQ,IAAKD,EAAM4B,QAASD,EAAE3B,KAAK6B,MACnC1B,GAAW,EAAM,IAElB2B,OAAM,KACLN,EAAAA,GAAMC,MAAM,4CACZtB,GAAW,EAAM,GAEvB,MACE4B,EAAAA,EAAAA,IAAM,CACJd,MAAW,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,MACbM,SAAc,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,WAEfJ,MAAMQ,IACL1B,EAAQ,IAAKD,EAAM4B,QAASD,EAAE3B,KAAK6B,MACnCvB,EAAS,IAAK,CAAE0B,SAAS,GAAO,IAEjCF,OAAOL,IACN,MAAMQ,EAAUC,KAAKC,UAAUV,GACbS,KAAKE,MAAMH,GACfI,KAAKC,MAAM,wBACvBd,EAAAA,GAAMC,MAAM,6BACZtB,GAAW,KAEXqB,EAAAA,GAAMC,MAAM,4CACZtB,GAAW,GACb,GAEN,GAEN,CAAE,MAAOsB,GACPD,EAAAA,GAAMC,MAAM,2CACd,GAM0Bf,SAAA,EAEtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAgB8B,QAAQ,QAAO7B,SAAC,YAGjDF,EAAAA,EAAAA,KAAA,SACEgC,GAAG,QACHC,SAAW3B,GAAMb,EAAQ,IAAKD,EAAMiB,MAAOH,EAAE4B,OAAOC,MAAMC,SAC1DC,KAAK,QACLC,aAAa,QACbC,YAAY,oBACZC,UAAQ,EACRvC,UAAU,iJAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAgB8B,QAAQ,WAAU7B,SAAC,cAGpDF,EAAAA,EAAAA,KAAA,SACEC,UAAU,2IACV+B,GAAG,WACHO,YAAY,WACZC,UAAQ,EACRC,IAAK,EACLR,SAAW3B,GAAMb,EAAQ,IAAKD,EAAMuB,SAAUT,EAAE4B,OAAOC,QACvDE,KAAK,iBAGTrC,EAAAA,EAAAA,KAAA,UACEqC,KAAK,SACLpC,UAAU,mHACVyC,SAAyB,KAAflD,EAAKiB,OAAkC,KAAlBjB,EAAKuB,UAAmBrB,EAAQQ,SAChE,eAIC,EC5FV,EAJwByC,KACf3C,EAAAA,EAAAA,KAACT,EAAI,G","sources":["ui/components/Form.tsx","ui/container/Login.tsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { UserContext } from 'src/context'\nimport { checkIfExists, login, register } from 'src/services/auth'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\n\nconst Form: React.FC = () => {\n  const { user, setUser, loading, setLoading } = useContext(UserContext)\n  const navigate = useNavigate()\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    setLoading(true)\n    try {\n      user.email !== undefined &&\n        (await checkIfExists(user.email).then((i) => {\n          if (i.length === 0) {\n            if (user.password !== undefined && user?.password?.length < 7) {\n              return toast.error('La contraseña debe tener 7 dígitos mínimo')\n            }\n            register({\n              email: user.email,\n              password: user.password,\n            })\n              .then((u) => {\n                setUser({ ...user, user_id: u.user.uid })\n                setLoading(false)\n              })\n              .catch(() => {\n                toast.error('Algo ha salido mal, intenta más tarde')\n                setLoading(false)\n              })\n          } else {\n            login({\n              email: user?.email,\n              password: user?.password,\n            })\n              .then((u) => {\n                setUser({ ...user, user_id: u.user.uid })\n                navigate('/', { replace: true })\n              })\n              .catch((error) => {\n                const getCode = JSON.stringify(error)\n                const parseCode = JSON.parse(getCode)\n                if (parseCode.code.match('auth/wrong-password')) {\n                  toast.error('Contraseña incorrrecta')\n                  setLoading(false)\n                } else {\n                  toast.error('Algo ha salido mal, intenta más tarde')\n                  setLoading(false)\n                }\n              })\n          }\n        }))\n    } catch (error) {\n      toast.error('Algo ha salido mal, intenta más tarde')\n    }\n  }\n  return (\n    <div className='flex items-center justify-center'>\n      <form\n        className='flex flex-col justify-between gap-4 p-4 border rounded-md h-72 w-72 md:w-96'\n        onSubmit={handleLogin}\n      >\n        <div className='flex flex-col'>\n          <label className='font-semibold' htmlFor='email'>\n            Correo\n          </label>\n          <input\n            id='email'\n            onChange={(e) => setUser({ ...user, email: e.target.value.trim() })}\n            type='email'\n            autoComplete='email'\n            placeholder='alguien@gmail.com'\n            required\n            className='w-full px-2 py-2 border rounded-md outline-none appearance-none focus:ring-blue-500 focus:ring-2 active:ring-blue-500 active:ring-2 peer'\n          />\n        </div>\n        <div className='flex flex-col'>\n          <label className='font-semibold' htmlFor='password'>\n            Password\n          </label>\n          <input\n            className='w-full px-2 py-2 border rounded-md outline-none appearance-none focus:ring-blue-500 focus:ring-2 active:ring-blue-500 active:ring-2 peer'\n            id='password'\n            placeholder='********'\n            required\n            min={7}\n            onChange={(e) => setUser({ ...user, password: e.target.value })}\n            type='password'\n          />\n        </div>\n        <button\n          type='submit'\n          className='w-24 p-2 text-white bg-blue-500 rounded-md disabled:cursor-not-allowed disabled:bg-blue-500/70 align-self-center'\n          disabled={user.email === '' || user.password === '' || loading}\n        >\n          Entrar\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport Form from 'src/ui/components/Form'\n\nconst Login: React.FC = () => {\n  return <Form />\n}\n\nexport default Login\n"],"names":["Form","user","setUser","loading","setLoading","useContext","UserContext","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","undefined","email","checkIfExists","then","i","length","_user$password","password","toast","error","register","u","user_id","uid","catch","login","replace","getCode","JSON","stringify","parse","code","match","htmlFor","id","onChange","target","value","trim","type","autoComplete","placeholder","required","min","disabled","Login"],"sourceRoot":""}