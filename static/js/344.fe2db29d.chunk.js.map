{"version":3,"file":"static/js/344.fe2db29d.chunk.js","mappings":"qMAMA,MAoGA,EApGuBA,KACrB,MAAM,KAAEC,EAAI,QAAEC,EAAO,QAAEC,EAAO,WAAEC,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GACpDC,GAAWC,EAAAA,EAAAA,MAoDjB,OADAC,QAAQC,IAAIT,EAAME,IAEhBQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC/CC,EAAAA,EAAAA,MAAA,QACEF,UAAU,8EACVG,SAvDcC,UAClBC,EAAEC,iBACFd,GAAW,GACX,SACiBe,IAAflB,EAAKmB,aACIC,EAAAA,EAAAA,IAAcpB,EAAKmB,OACvBE,MAAMC,IACL,GAAiB,IAAbA,EAAEC,OAAc,CAAC,IAADC,EAClB,QAAsBN,IAAlBlB,EAAKyB,WAA8B,OAAJzB,QAAI,IAAJA,GAAc,QAAVwB,EAAJxB,EAAMyB,gBAAQ,IAAAD,OAAV,EAAJA,EAAgBD,QAAS,EAC1D,OAAOG,EAAAA,GAAMC,MAAM,uDAErBC,EAAAA,EAAAA,IAAS,CACPT,MAAOnB,EAAKmB,MACZM,SAAUzB,EAAKyB,WAEdJ,MAAMQ,IACL5B,EAAQ,IAAKD,EAAM8B,QAASD,EAAE7B,KAAK+B,MAEnCzB,EAAS,IAAK,CAAE0B,SAAS,GAAO,IAEjCC,OAAM,KACLP,EAAAA,GAAMC,MAAM,2CAAwC,GAE1D,MACEO,EAAAA,EAAAA,IAAM,CACJf,MAAW,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,MACbM,SAAc,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,WAEfJ,MAAMQ,IACL5B,EAAQ,IAAKD,EAAM8B,QAASD,EAAE7B,KAAK+B,MACnCzB,EAAS,IAAK,CAAE0B,SAAS,GAAO,IAEjCC,OAAON,IACN,MAAMQ,EAAUC,KAAKC,UAAUV,GACbS,KAAKE,MAAMH,GACfI,KAAKC,MAAM,uBACvBd,EAAAA,GAAMC,MAAM,6BAEZD,EAAAA,GAAMC,MAAM,2CACd,GAEN,IAEDc,SAAQ,KACPtC,GAAW,EAAM,GAEzB,CAAE,MAAOwB,GACPD,EAAAA,GAAMC,MAAM,2CACd,GAO0Bf,SAAA,EAEtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAgB+B,QAAQ,QAAO9B,SAAC,YAGjDF,EAAAA,EAAAA,KAAA,SACEiC,GAAG,QACHC,SAAW5B,GAAMf,EAAQ,IAAKD,EAAMmB,MAAOH,EAAE6B,OAAOC,MAAMC,SAC1DC,KAAK,QACLC,aAAa,QACbC,YAAY,oBACZC,UAAQ,EACRxC,UAAU,iJAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAgB+B,QAAQ,WAAU9B,SAAC,cAGpDF,EAAAA,EAAAA,KAAA,SACEC,UAAU,2IACVgC,GAAG,WACHO,YAAY,WACZC,UAAQ,EACRC,IAAK,EACLR,SAAW5B,GAAMf,EAAQ,IAAKD,EAAMyB,SAAUT,EAAE6B,OAAOC,QACvDE,KAAK,iBAGTtC,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACLrC,UAAU,mHACV0C,SAAyB,KAAfrD,EAAKmB,OAAkC,KAAlBnB,EAAKyB,UAAmBvB,EAAQU,SAChE,eAIC,EC/FV,EAJwB0C,KACf5C,EAAAA,EAAAA,KAACX,EAAI,G","sources":["ui/components/Form.tsx","ui/container/Login.tsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { UserContext } from 'src/context'\nimport { checkIfExists, login, register } from 'src/services/auth'\nimport { useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\n\nconst Form: React.FC = () => {\n  const { user, setUser, loading, setLoading } = useContext(UserContext)\n  const navigate = useNavigate()\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    setLoading(true)\n    try {\n      user.email !== undefined &&\n        (await checkIfExists(user.email)\n          .then((i) => {\n            if (i.length === 0) {\n              if (user.password !== undefined && user?.password?.length < 7) {\n                return toast.error('La contraseña debe tener 7 dígitos mínimo')\n              }\n              register({\n                email: user.email,\n                password: user.password,\n              })\n                .then((u) => {\n                  setUser({ ...user, user_id: u.user.uid })\n\n                  navigate('/', { replace: true })\n                })\n                .catch(() => {\n                  toast.error('Algo ha salido mal, intenta más tarde')\n                })\n            } else {\n              login({\n                email: user?.email,\n                password: user?.password,\n              })\n                .then((u) => {\n                  setUser({ ...user, user_id: u.user.uid })\n                  navigate('/', { replace: true })\n                })\n                .catch((error) => {\n                  const getCode = JSON.stringify(error)\n                  const parseCode = JSON.parse(getCode)\n                  if (parseCode.code.match('auth/wrong-password')) {\n                    toast.error('Contraseña incorrrecta')\n                  } else {\n                    toast.error('Algo ha salido mal, intenta más tarde')\n                  }\n                })\n            }\n          })\n          .finally(() => {\n            setLoading(false)\n          }))\n    } catch (error) {\n      toast.error('Algo ha salido mal, intenta más tarde')\n    }\n  }\n  console.log(user, loading)\n  return (\n    <div className='flex items-center justify-center'>\n      <form\n        className='flex flex-col justify-between gap-4 p-4 border rounded-md h-72 w-72 md:w-96'\n        onSubmit={handleLogin}\n      >\n        <div className='flex flex-col'>\n          <label className='font-semibold' htmlFor='email'>\n            Correo\n          </label>\n          <input\n            id='email'\n            onChange={(e) => setUser({ ...user, email: e.target.value.trim() })}\n            type='email'\n            autoComplete='email'\n            placeholder='alguien@gmail.com'\n            required\n            className='w-full px-2 py-2 border rounded-md outline-none appearance-none focus:ring-blue-500 focus:ring-2 active:ring-blue-500 active:ring-2 peer'\n          />\n        </div>\n        <div className='flex flex-col'>\n          <label className='font-semibold' htmlFor='password'>\n            Password\n          </label>\n          <input\n            className='w-full px-2 py-2 border rounded-md outline-none appearance-none focus:ring-blue-500 focus:ring-2 active:ring-blue-500 active:ring-2 peer'\n            id='password'\n            placeholder='********'\n            required\n            min={7}\n            onChange={(e) => setUser({ ...user, password: e.target.value })}\n            type='password'\n          />\n        </div>\n        <button\n          type='submit'\n          className='w-24 p-2 text-white bg-blue-500 rounded-md disabled:cursor-not-allowed disabled:bg-blue-500/70 align-self-center'\n          disabled={user.email === '' || user.password === '' || loading}\n        >\n          Entrar\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport Form from 'src/ui/components/Form'\n\nconst Login: React.FC = () => {\n  return <Form />\n}\n\nexport default Login\n"],"names":["Form","user","setUser","loading","setLoading","useContext","UserContext","navigate","useNavigate","console","log","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","undefined","email","checkIfExists","then","i","length","_user$password","password","toast","error","register","u","user_id","uid","replace","catch","login","getCode","JSON","stringify","parse","code","match","finally","htmlFor","id","onChange","target","value","trim","type","autoComplete","placeholder","required","min","disabled","Login"],"sourceRoot":""}